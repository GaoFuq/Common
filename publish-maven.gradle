//发布到maven仓库的gradle配置。使用方式，在模块的gradle文件中加入：apply from: rootProject.file('./publish-maven.gradle')
apply plugin: 'maven-publish'

//Maven仓库地址。下载地址：http://localhost:8081/repository/maven-public/
def repository_url = android.defaultConfig.versionName.contains("SNAPSHOT")
        ? "http://localhost:8081/repository/maven-snapshots/"
        : "http://localhost:8081/repository/maven-releases/"
//maven仓库登陆时候的用户名/密码
def maven_username = "admin"
def maven_password = "admin"
def group_id = "com.tgf.kcwc"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task androidJavadocs(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.sourceFiles
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release
                // 可以省略，默认为工程名称。
                groupId = group_id
                // 可以省略，默认为模块名称。
//                artifactId = ""
                // 不能省略
                version = android.defaultConfig.versionName
                artifact androidJavadocsJar
                artifact androidSourcesJar
            }
        }
        repositories {
            maven {
                url = repository_url
                credentials {
                    username = maven_username
                    password = maven_password
                }
            }
        }
    }
}

// 禁止缓存变化模块（SNAPSHOT）
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}